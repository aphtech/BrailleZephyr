/* Copyright (C) 2015 American Printing House for the Blind Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
	id "java"
	id "application"
	id "org.panteleyev.jpackageplugin" version "1.6.0"
}

compileJava {
	options.release = 8
}

group = "org.aph.braillezephyr"
version = "0.1"

application {
	mainClass = "org.aph.braillezephyr.Main"
}

String swtJar
switch(System.getProperty("os.name").toLowerCase().split()[0])
{
case "mac":
	swtJar = "org.eclipse.swt.cocoa.macosx.x86_64"
	application.applicationDefaultJvmArgs.add("-XstartOnFirstThread")
	break

case "windows":
	swtJar = "org.eclipse.swt.win32.win32.x86_64"
	break

default:
	swtJar = "org.eclipse.swt.gtk.linux.x86_64"
	break
}

configurations {
	winX86
	winX64
	linuxX86
	linuxX64
	macosxX64
}

dependencies {
	implementation("org.eclipse.swt:${swtJar}:4.+")
	linuxX64("org.eclipse.swt:org.eclipse.swt.gtk.linux.x86_64:4.+")
	linuxX86("org.eclipse.swt:org.eclipse.swt.gtk.linux.x86:4.+")
	winX64("org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.+")
	winX86("org.eclipse.swt:org.eclipse.swt.win32.win32.x86:4.+")
	macosxX64("org.eclipse.swt:org.eclipse.swt.cocoa.macosx.x86_64:4.+")
}

ext.defaultManifest = java.manifest {
	attributes("Main-Class": application.mainClass,
	           "Implementation-Version": version)
}

jar {
	manifest = project.java.manifest {
		from(defaultManifest)
	}

	archiveBaseName = "BrailleZephyr"
}

tasks.register("linux32Jar", Jar) {
	archiveAppendix = "linux-x86"

	manifest = project.java.manifest {
		from(defaultManifest)
	}

	from {
		configurations.linuxX86.collect { zipTree(it) }
	}

	with(jar)
}

tasks.register("linux64Jar", Jar) {
	archiveAppendix = "linux-x86_64"

	manifest = project.java.manifest {
		from(defaultManifest)
	}

	from {
		configurations.linuxX64.collect { zipTree(it) }
	}

	with(jar)
}

tasks.register("win32Jar", Jar) {
	archiveAppendix = "windows-x86"

	manifest = project.java.manifest {
		from(defaultManifest)
	}

	from {
		configurations.winX86.collect { zipTree(it) }
	}

	with(jar)
}

tasks.register("win64Jar", Jar) {
	archiveAppendix = "windows-x86_64"

	manifest = project.java.manifest {
		from(defaultManifest)
	}

	from {
		configurations.winX64.collect { zipTree(it) }
	}

	with(jar)
}

tasks.register("macxJar", Jar) {
	archiveAppendix = "macosx-x86_64"

	manifest = project.java.manifest {
		from(defaultManifest)
	}

	from {
		configurations.macosxX64.collect { zipTree(it) }
	}

	with(jar)
}

tasks.register("allJars") {
	dependsOn(linux32Jar, linux64Jar, win32Jar, win64Jar, macxJar)
}

tasks.register("copyDependencies", Copy) {
	from(configurations.runtimeClasspath)
	into("${layout.buildDirectory.get()}/jpackage-app")
}

tasks.register("copyJar", Copy) {
	from(tasks.jar)
	into("${layout.buildDirectory.get()}/jpackage-app")
}

tasks.jpackage {
	dependsOn("build", "copyDependencies", "copyJar")
	input = "${layout.buildDirectory.get()}/jpackage-app"
	destination = "${layout.buildDirectory.get()}/dist"
	appName = "BrailleZephyr"
	vendor = "American Printing House for the Blind"
	mainJar = tasks.jar.archiveFileName.get()
	mainClass = application.mainClass.get()
	javaOptions = application.applicationDefaultJvmArgs.asList()
	addModules = [ "java.desktop" ]
	windows {
		winDirChooser = true
		winMenu = true
	}
}
run {
	systemProperties["braillezephyr.version"] = version
}

wrapper {
	gradleVersion = "8.5"
}

repositories {
	mavenCentral()
}
